const e=document.getElementById("animation_bg");me();let n={SIM_RESOLUTION:128,DYE_RESOLUTION:1024,CAPTURE_RESOLUTION:512,DENSITY_DISSIPATION:3,VELOCITY_DISSIPATION:3,PRESSURE:.8,PRESSURE_ITERATIONS:20,CURL:0,SPLAT_RADIUS:.25,SPLAT_FORCE:6e3,SHADING:!0,COLORFUL:!0,COLOR_UPDATE_SPEED:10,PAUSED:!1,BACK_COLOR:{r:5,g:5,b:5},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.7,BLOOM_SOFT_KNEE:.7,SUNRAYS:!0,SUNRAYS_RESOLUTION:196,SUNRAYS_WEIGHT:.5};function t(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}let r=[],i=[];r.push(new t);const{gl:o,ext:a}=function(e){const n={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1};let t=e.getContext("webgl2",n);const r=!!t;r||(t=e.getContext("webgl",n)||e.getContext("experimental-webgl",n));let i,o;r?(t.getExtension("EXT_color_buffer_float"),o=t.getExtension("OES_texture_float_linear")):(i=t.getExtension("OES_texture_half_float"),o=t.getExtension("OES_texture_half_float_linear"));t.clearColor(0,0,0,1);const a=r?t.HALF_FLOAT:i.HALF_FLOAT_OES;let l,f,c;r?(l=u(t,t.RGBA16F,t.RGBA,a),f=u(t,t.RG16F,t.RG,a),c=u(t,t.R16F,t.RED,a)):(l=u(t,t.RGBA,t.RGBA,a),f=u(t,t.RGBA,t.RGBA,a),c=u(t,t.RGBA,t.RGBA,a));return{gl:t,ext:{formatRGBA:l,formatRG:f,formatR:c,halfFloatTexType:a,supportLinearFiltering:o}}}(e);function u(e,n,t,r){if(!function(e,n,t,r){let i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,n,4,4,0,t,r,null);let o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER);return a===e.FRAMEBUFFER_COMPLETE}(e,n,t,r))switch(n){case e.R16F:return u(e,e.RG16F,e.RG,r);case e.RG16F:return u(e,e.RGBA16F,e.RGBA,r);default:return null}return{internalFormat:n,format:t}}/Mobi|Android/i.test(navigator.userAgent)&&(n.DYE_RESOLUTION=512),a.supportLinearFiltering||(n.DYE_RESOLUTION=512,n.SHADING=!1,n.BLOOM=!1,n.SUNRAYS=!1);class l{constructor(e,n){this.uniforms={},this.program=f(e,n),this.uniforms=c(this.program)}bind(){o.useProgram(this.program)}}function f(e,n){let t=o.createProgram();return o.attachShader(t,e),o.attachShader(t,n),o.linkProgram(t),o.getProgramParameter(t,o.LINK_STATUS),t}function c(e){let n=[],t=o.getProgramParameter(e,o.ACTIVE_UNIFORMS);for(let r=0;r<t;r++){let t=o.getActiveUniform(e,r).name;n[t]=o.getUniformLocation(e,t)}return n}function v(e,n,t){n=function(e,n){if(null==n)return e;let t="";return n.forEach((e=>{t+="#define "+e+"\n"})),t+e}(n,t);const r=o.createShader(e);return o.shaderSource(r,n),o.compileShader(r),o.getShaderParameter(r,o.COMPILE_STATUS),r}const m=v(o.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),s=v(o.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        float offset = 1.33333333;\n        vL = vUv - texelSize * offset;\n        vR = vUv + texelSize * offset;\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),h=v(o.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = texture2D(uTexture, vUv) * 0.29411764;\n        sum += texture2D(uTexture, vL) * 0.35294117;\n        sum += texture2D(uTexture, vR) * 0.35294117;\n        gl_FragColor = sum;\n    }\n"),T=v(o.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n"),d=v(o.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),x=v(o.FRAGMENT_SHADER,"\n    precision mediump float;\n\n    uniform vec4 color;\n\n    void main () {\n        gl_FragColor = color;\n    }\n"),E=v(o.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n\n    #define SCALE 25.0\n\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(vec3(v), 1.0);\n    }\n"),g=v(o.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),R=v(o.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),p=v(o.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),S=v(o.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 c = texture2D(uTexture, vUv);\n        float br = max(c.r, max(c.g, c.b));\n        c.a = 1.0 - min(max(br * 20.0, 0.0), 0.8);\n        gl_FragColor = c;\n    }\n"),D=v(o.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float weight;\n\n    #define ITERATIONS 16\n\n    void main () {\n        float Density = 0.3;\n        float Decay = 0.95;\n        float Exposure = 0.7;\n\n        vec2 coord = vUv;\n        vec2 dir = vUv - 0.5;\n\n        dir *= 1.0 / float(ITERATIONS) * Density;\n        float illuminationDecay = 1.0;\n\n        float color = texture2D(uTexture, vUv).a;\n\n        for (int i = 0; i < ITERATIONS; i++)\n        {\n            coord -= dir;\n            float col = texture2D(uTexture, coord).a;\n            color += col * illuminationDecay * weight;\n            illuminationDecay *= Decay;\n        }\n\n        gl_FragColor = vec4(color * Exposure, 0.0, 0.0, 1.0);\n    }\n"),A=v(o.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),_=v(o.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n\n    void main () {\n    #ifdef MANUAL_FILTERING\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        vec4 result = bilerp(uSource, coord, dyeTexelSize);\n    #else\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        vec4 result = texture2D(uSource, coord);\n    #endif\n        float decay = 1.0 + dissipation * dt;\n        gl_FragColor = result / decay;\n    }",a.supportLinearFiltering?null:["MANUAL_FILTERING"]),y=v(o.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),U=v(o.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),L=v(o.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity += force * dt;\n        velocity = min(max(velocity, -1000.0), 1000.0);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),F=v(o.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),O=v(o.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),N=(o.bindBuffer(o.ARRAY_BUFFER,o.createBuffer()),o.bufferData(o.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),o.STATIC_DRAW),o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,o.createBuffer()),o.bufferData(o.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),o.STATIC_DRAW),o.vertexAttribPointer(0,2,o.FLOAT,!1,0,0),o.enableVertexAttribArray(0),(e,n=!1)=>{null==e?(o.viewport(0,0,o.drawingBufferWidth,o.drawingBufferHeight),o.bindFramebuffer(o.FRAMEBUFFER,null)):(o.viewport(0,0,e.width,e.height),o.bindFramebuffer(o.FRAMEBUFFER,e.fbo)),n&&(o.clearColor(0,0,0,1),o.clear(o.COLOR_BUFFER_BIT)),o.drawElements(o.TRIANGLES,6,o.UNSIGNED_SHORT,0)});let b,w,B,I,P,M,X,C,z=[],G=function(){let e=o.createTexture();return o.bindTexture(o.TEXTURE_2D,e),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,o.LINEAR),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,o.LINEAR),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_S,o.REPEAT),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_T,o.REPEAT),o.texImage2D(o.TEXTURE_2D,0,o.RGB,1,1,0,o.RGB,o.UNSIGNED_BYTE,new Uint8Array([255,255,255])),{texture:e,width:1,height:1,attach:n=>(o.activeTexture(o.TEXTURE0+n),o.bindTexture(o.TEXTURE_2D,e),n)}}();const Y=new l(s,h),H=new l(m,T),V=new l(m,d),W=new l(m,x),k=new l(m,E),K=new l(m,g),q=new l(m,R),j=new l(m,p),J=new l(m,S),Q=new l(m,D),Z=new l(m,A),$=new l(m,_),ee=new l(m,y),ne=new l(m,U),te=new l(m,L),re=new l(m,F),ie=new l(m,O),oe=new class{constructor(e,n){this.vertexShader=e,this.fragmentShaderSource=n,this.programs=[],this.activeProgram=null,this.uniforms=[]}setKeywords(e){let n=0;for(let r=0;r<e.length;r++)n+=Re(e[r]);let t=this.programs[n];if(null==t){let r=v(o.FRAGMENT_SHADER,this.fragmentShaderSource,e);t=f(this.vertexShader,r),this.programs[n]=t}t!==this.activeProgram&&(this.uniforms=c(t),this.activeProgram=t)}bind(){o.useProgram(this.activeProgram)}}(m,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uSunrays;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n\n    vec3 linearToGamma (vec3 color) {\n        color = max(color, vec3(0));\n        return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n    }\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n\n    #ifdef SHADING\n        vec3 lc = texture2D(uTexture, vL).rgb;\n        vec3 rc = texture2D(uTexture, vR).rgb;\n        vec3 tc = texture2D(uTexture, vT).rgb;\n        vec3 bc = texture2D(uTexture, vB).rgb;\n\n        float dx = length(rc) - length(lc);\n        float dy = length(tc) - length(bc);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        c *= diffuse;\n    #endif\n\n    #ifdef BLOOM\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n    #endif\n\n    #ifdef SUNRAYS\n        float sunrays = texture2D(uSunrays, vUv).r;\n        c *= sunrays;\n    #ifdef BLOOM\n        bloom *= sunrays;\n    #endif\n    #endif\n\n    #ifdef BLOOM\n        float noise = texture2D(uDithering, vUv * ditherScale).r;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 255.0;\n        bloom = linearToGamma(bloom);\n        c += bloom;\n    #endif\n\n        float a = max(c.r, max(c.g, c.b));\n        gl_FragColor = vec4(c, a);\n    }\n");function ae(){let e=Ee(n.SIM_RESOLUTION),t=Ee(n.DYE_RESOLUTION);const r=a.halfFloatTexType,i=a.formatRGBA,u=a.formatRG,l=a.formatR,f=a.supportLinearFiltering?o.LINEAR:o.NEAREST;o.disable(o.BLEND),b=null==b?le(t.width,t.height,i.internalFormat,i.format,r,f):fe(b,t.width,t.height,i.internalFormat,i.format,r,f),w=null==w?le(e.width,e.height,u.internalFormat,u.format,r,f):fe(w,e.width,e.height,u.internalFormat,u.format,r,f),B=ue(e.width,e.height,l.internalFormat,l.format,r,o.NEAREST),I=ue(e.width,e.height,l.internalFormat,l.format,r,o.NEAREST),P=le(e.width,e.height,l.internalFormat,l.format,r,o.NEAREST),function(){let e=Ee(n.BLOOM_RESOLUTION);const t=a.halfFloatTexType,r=a.formatRGBA,i=a.supportLinearFiltering?o.LINEAR:o.NEAREST;M=ue(e.width,e.height,r.internalFormat,r.format,t,i),z.length=0;for(let o=0;o<n.BLOOM_ITERATIONS;o++){let n=e.width>>o+1,a=e.height>>o+1;if(n<2||a<2)break;let u=ue(n,a,r.internalFormat,r.format,t,i);z.push(u)}}(),function(){let e=Ee(n.SUNRAYS_RESOLUTION);const t=a.halfFloatTexType,r=a.formatR,i=a.supportLinearFiltering?o.LINEAR:o.NEAREST;X=ue(e.width,e.height,r.internalFormat,r.format,t,i),C=ue(e.width,e.height,r.internalFormat,r.format,t,i)}()}function ue(e,n,t,r,i,a){o.activeTexture(o.TEXTURE0);let u=o.createTexture();o.bindTexture(o.TEXTURE_2D,u),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,a),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,a),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE),o.texImage2D(o.TEXTURE_2D,0,t,e,n,0,r,i,null);let l=o.createFramebuffer();return o.bindFramebuffer(o.FRAMEBUFFER,l),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,o.TEXTURE_2D,u,0),o.viewport(0,0,e,n),o.clear(o.COLOR_BUFFER_BIT),{texture:u,fbo:l,width:e,height:n,texelSizeX:1/e,texelSizeY:1/n,attach:e=>(o.activeTexture(o.TEXTURE0+e),o.bindTexture(o.TEXTURE_2D,u),e)}}function le(e,n,t,r,i,o){let a=ue(e,n,t,r,i,o),u=ue(e,n,t,r,i,o);return{width:e,height:n,texelSizeX:a.texelSizeX,texelSizeY:a.texelSizeY,get read(){return a},set read(e){a=e},get write(){return u},set write(e){u=e},swap(){let e=a;a=u,u=e}}}function fe(e,n,t,r,i,a,u){return e.width===n&&e.height===t||(e.read=function(e,n,t,r,i,a,u){let l=ue(n,t,r,i,a,u);return H.bind(),o.uniform1i(H.uniforms.uTexture,e.attach(0)),N(l),l}(e.read,n,t,r,i,a,u),e.write=ue(n,t,r,i,a,u),e.width=n,e.height=t,e.texelSizeX=1/n,e.texelSizeY=1/t),e}!function(){let e=[];n.SHADING&&e.push("SHADING"),n.BLOOM&&e.push("BLOOM"),n.SUNRAYS&&e.push("SUNRAYS"),oe.setKeywords(e)}(),ae();let ce=Date.now(),ve=0;function me(){let n=ge(e.clientWidth),t=ge(e.clientHeight);return(e.width!==n||e.height!==t)&&(e.width=n,e.height=t,!0)}function se(t,r,i,a,u){Z.bind(),o.uniform1i(Z.uniforms.uTarget,w.read.attach(0)),o.uniform1f(Z.uniforms.aspectRatio,e.width/e.height),o.uniform2f(Z.uniforms.point,t,r),o.uniform3f(Z.uniforms.color,i,a,0),o.uniform1f(Z.uniforms.radius,function(n){let t=e.width/e.height;t>1&&(n*=t);return n}(n.SPLAT_RADIUS/100)),N(w.write),w.swap(),o.uniform1i(Z.uniforms.uTarget,b.read.attach(0)),o.uniform3f(Z.uniforms.color,u.r,u.g,u.b),N(b.write),b.swap()}function he(n,t,r,i){n.id=t,n.down=!0,n.moved=!1,n.texcoordX=r/e.width,n.texcoordY=1-i/e.height,n.prevTexcoordX=n.texcoordX,n.prevTexcoordY=n.texcoordY,n.deltaX=0,n.deltaY=0,n.color=xe()}function Te(n,t,r){n.prevTexcoordX=n.texcoordX,n.prevTexcoordY=n.texcoordY,n.texcoordX=t/e.width,n.texcoordY=1-r/e.height,n.deltaX=function(n){let t=e.width/e.height;t<1&&(n*=t);return n}(n.texcoordX-n.prevTexcoordX),n.deltaY=function(n){let t=e.width/e.height;t>1&&(n/=t);return n}(n.texcoordY-n.prevTexcoordY),n.moved=Math.abs(n.deltaX)>0||Math.abs(n.deltaY)>0}function de(e){e.down=!1}function xe(){let e=function(e,n,t){let r,i,o,a,u,l,f,c;switch(a=Math.floor(6*e),u=6*e-a,l=t*(1-n),f=t*(1-u*n),c=t*(1-(1-u)*n),a%6){case 0:r=t,i=c,o=l;break;case 1:r=f,i=t,o=l;break;case 2:r=l,i=t,o=c;break;case 3:r=l,i=f,o=t;break;case 4:r=c,i=l,o=t;break;case 5:r=t,i=l,o=f}return{r:r,g:i,b:o}}(Math.random(),1,1);return e.r*=.15,e.g*=.15,e.b*=.15,e}function Ee(e){let n=o.drawingBufferWidth/o.drawingBufferHeight;n<1&&(n=1/n);let t=Math.round(e),r=Math.round(e*n);return o.drawingBufferWidth>o.drawingBufferHeight?{width:r,height:t}:{width:t,height:r}}function ge(e){let n=window.devicePixelRatio||1;return Math.floor(e*n)}function Re(e){if(0===e.length)return 0;let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return n}!function t(){const u=function(){let e=Date.now(),n=(e-ce)/1e3;return n=Math.min(n,.016666),ce=e,n}();me()&&ae();(function(e){if(!n.COLORFUL)return;ve+=e*n.COLOR_UPDATE_SPEED,ve>=1&&(ve=function(e,n,t){let r=t-n;return 0===r?n:(e-n)%r+n}(ve,0,1),r.forEach((e=>{e.color=xe()})))})(u),function(){i.length>0&&function(e){for(let n=0;n<e;n++){const e=xe();e.r*=10,e.g*=10,e.b*=10;se(Math.random(),Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),e)}}(i.pop());r.forEach((e=>{e.moved&&(e.moved=!1,function(e){let t=e.deltaX*n.SPLAT_FORCE,r=e.deltaY*n.SPLAT_FORCE;se(e.texcoordX,e.texcoordY,t,r,e.color)}(e))}))}(),n.PAUSED||function(e){o.disable(o.BLEND),ne.bind(),o.uniform2f(ne.uniforms.texelSize,w.texelSizeX,w.texelSizeY),o.uniform1i(ne.uniforms.uVelocity,w.read.attach(0)),N(I),te.bind(),o.uniform2f(te.uniforms.texelSize,w.texelSizeX,w.texelSizeY),o.uniform1i(te.uniforms.uVelocity,w.read.attach(0)),o.uniform1i(te.uniforms.uCurl,I.attach(1)),o.uniform1f(te.uniforms.curl,n.CURL),o.uniform1f(te.uniforms.dt,e),N(w.write),w.swap(),ee.bind(),o.uniform2f(ee.uniforms.texelSize,w.texelSizeX,w.texelSizeY),o.uniform1i(ee.uniforms.uVelocity,w.read.attach(0)),N(B),V.bind(),o.uniform1i(V.uniforms.uTexture,P.read.attach(0)),o.uniform1f(V.uniforms.value,n.PRESSURE),N(P.write),P.swap(),re.bind(),o.uniform2f(re.uniforms.texelSize,w.texelSizeX,w.texelSizeY),o.uniform1i(re.uniforms.uDivergence,B.attach(0));for(let r=0;r<n.PRESSURE_ITERATIONS;r++)o.uniform1i(re.uniforms.uPressure,P.read.attach(1)),N(P.write),P.swap();ie.bind(),o.uniform2f(ie.uniforms.texelSize,w.texelSizeX,w.texelSizeY),o.uniform1i(ie.uniforms.uPressure,P.read.attach(0)),o.uniform1i(ie.uniforms.uVelocity,w.read.attach(1)),N(w.write),w.swap(),$.bind(),o.uniform2f($.uniforms.texelSize,w.texelSizeX,w.texelSizeY),a.supportLinearFiltering||o.uniform2f($.uniforms.dyeTexelSize,w.texelSizeX,w.texelSizeY);let t=w.read.attach(0);o.uniform1i($.uniforms.uVelocity,t),o.uniform1i($.uniforms.uSource,t),o.uniform1f($.uniforms.dt,e),o.uniform1f($.uniforms.dissipation,n.VELOCITY_DISSIPATION),N(w.write),w.swap(),a.supportLinearFiltering||o.uniform2f($.uniforms.dyeTexelSize,b.texelSizeX,b.texelSizeY);o.uniform1i($.uniforms.uVelocity,w.read.attach(0)),o.uniform1i($.uniforms.uSource,b.read.attach(1)),o.uniform1f($.uniforms.dissipation,n.DENSITY_DISSIPATION),N(b.write),b.swap()}(u);(function(t){n.BLOOM&&function(e,t){if(z.length<2)return;let r=t;o.disable(o.BLEND),K.bind();let i=n.BLOOM_THRESHOLD*n.BLOOM_SOFT_KNEE+1e-4,a=n.BLOOM_THRESHOLD-i,u=2*i,l=.25/i;o.uniform3f(K.uniforms.curve,a,u,l),o.uniform1f(K.uniforms.threshold,n.BLOOM_THRESHOLD),o.uniform1i(K.uniforms.uTexture,e.attach(0)),N(r),q.bind();for(let n=0;n<z.length;n++){let e=z[n];o.uniform2f(q.uniforms.texelSize,r.texelSizeX,r.texelSizeY),o.uniform1i(q.uniforms.uTexture,r.attach(0)),N(e),r=e}o.blendFunc(o.ONE,o.ONE),o.enable(o.BLEND);for(let n=z.length-2;n>=0;n--){let e=z[n];o.uniform2f(q.uniforms.texelSize,r.texelSizeX,r.texelSizeY),o.uniform1i(q.uniforms.uTexture,r.attach(0)),o.viewport(0,0,e.width,e.height),N(e),r=e}o.disable(o.BLEND),j.bind(),o.uniform2f(j.uniforms.texelSize,r.texelSizeX,r.texelSizeY),o.uniform1i(j.uniforms.uTexture,r.attach(0)),o.uniform1f(j.uniforms.intensity,n.BLOOM_INTENSITY),N(t)}(b.read,M);n.SUNRAYS&&(r=b.read,i=b.write,a=X,o.disable(o.BLEND),J.bind(),o.uniform1i(J.uniforms.uTexture,r.attach(0)),N(i),Q.bind(),o.uniform1f(Q.uniforms.weight,n.SUNRAYS_WEIGHT),o.uniform1i(Q.uniforms.uTexture,i.attach(0)),N(a),function(e,n,t){Y.bind();for(let r=0;r<t;r++)o.uniform2f(Y.uniforms.texelSize,e.texelSizeX,0),o.uniform1i(Y.uniforms.uTexture,e.attach(0)),N(n),o.uniform2f(Y.uniforms.texelSize,0,e.texelSizeY),o.uniform1i(Y.uniforms.uTexture,n.attach(0)),N(e)}(X,C,1));var r,i,a;null!=t&&n.TRANSPARENT?o.disable(o.BLEND):(o.blendFunc(o.ONE,o.ONE_MINUS_SRC_ALPHA),o.enable(o.BLEND));n.TRANSPARENT||function(e,n){W.bind(),o.uniform4f(W.uniforms.color,n.r,n.g,n.b,1),N(e)}(t,(u=n.BACK_COLOR,{r:u.r/255,g:u.g/255,b:u.b/255}));var u;null==t&&n.TRANSPARENT&&function(n){k.bind(),o.uniform1f(k.uniforms.aspectRatio,e.width/e.height),N(n)}(t);!function(e){let t=null==e?o.drawingBufferWidth:e.width,r=null==e?o.drawingBufferHeight:e.height;oe.bind(),n.SHADING&&o.uniform2f(oe.uniforms.texelSize,1/t,1/r);if(o.uniform1i(oe.uniforms.uTexture,b.read.attach(0)),n.BLOOM){o.uniform1i(oe.uniforms.uBloom,M.attach(1)),o.uniform1i(oe.uniforms.uDithering,G.attach(2));let e=function(e,n,t){return{x:n/e.width,y:t/e.height}}(G,t,r);o.uniform2f(oe.uniforms.ditherScale,e.x,e.y)}n.SUNRAYS&&o.uniform1i(oe.uniforms.uSunrays,X.attach(3));N(e)}(t)})(null),requestAnimationFrame(t)}(),e.addEventListener("mouseover",(e=>{let n=ge(e.offsetX),i=ge(e.offsetY),o=r.find((e=>-1===e.id));null==o&&(o=new t),he(o,-1,n,i)})),e.addEventListener("mousemove",(e=>{let n=r[0];n.down&&Te(n,ge(e.offsetX),ge(e.offsetY))})),e.addEventListener("touchstart",(e=>{e.preventDefault();const n=e.targetTouches;for(;n.length>=r.length;)r.push(new t);for(let t=0;t<n.length;t++){let e=ge(n[t].pageX),i=ge(n[t].pageY);he(r[t+1],n[t].identifier,e,i)}})),e.addEventListener("touchmove",(e=>{e.preventDefault();const n=e.targetTouches;for(let t=0;t<n.length;t++){let e=r[t+1];e.down&&Te(e,ge(n[t].pageX),ge(n[t].pageY))}}),!1),window.addEventListener("touchend",(e=>{const n=e.changedTouches;for(let t=0;t<n.length;t++){let e=r.find((e=>e.id===n[t].identifier));null!=e&&de(e)}})),window.addEventListener("keydown",(e=>{"KeyP"===e.code&&(n.PAUSED=!n.PAUSED)," "===e.key&&i.push(parseInt(20*Math.random())+5)}));
//# sourceMappingURL=wegl-fluid.min.js.map